t_tables <- bind_rows(t1_table, t2_table)
class(t2_table$p)
t2_table <- data.frame(intervention = "altruism",
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = as.numeric(format(round(diff_t2$p.value, 3), nsmall = 3)),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t2_table
t1_table <- data.frame(intervention = "fear",
t = round(diff_t1$statistic, 2),
df = diff_t1$parameter,
p = as.character(format(round(diff_t1$p.value, 3), nsmall = 3)),
d = round(d_t1, 2),
mu = diff_t1$null.value)
diff_t2 <- t.test(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
d_t2 <- cohensD(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
t2_table <- data.frame(intervention = "altruism",
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = as.character(format(round(diff_t2$p.value, 3), nsmall = 3)),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- bind_rows(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests") %>%
kable_styling()
t1_table <- data.frame(
t = round(diff_t1$statistic, 2),
df = diff_t1$parameter,
p = as.character(format(round(diff_t1$p.value, 3), nsmall = 3)),
d = round(d_t1, 2),
mu = diff_t1$null.value)
diff_t2 <- t.test(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
d_t2 <- cohensD(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
t2_table <- data.frame(
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = as.character(format(round(diff_t2$p.value, 3), nsmall = 3)),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- bind_rows(t1_table, t2_table)
t1_table <- data.frame(intervention = c("fear"),
t = round(diff_t1$statistic, 2),
df = diff_t1$parameter,
p = format(round(diff_t1$p.value, 3), nsmall = 3),
d = round(d_t1, 2),
mu = diff_t1$null.value)
diff_t2 <- t.test(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
d_t2 <- cohensD(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
t2_table <- data.frame(intervention = c("altruism"),
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = format(round(diff_t2$p.value, 3), nsmall = 3),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- bind_rows(t1_table, t2_table)
t2_table$intervention
t1_table <- data.frame(intervention = as.character("fear"),
t = round(diff_t1$statistic, 2),
df = diff_t1$parameter,
p = format(round(diff_t1$p.value, 3), nsmall = 3),
d = round(d_t1, 2),
mu = diff_t1$null.value)
diff_t2 <- t.test(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
d_t2 <- cohensD(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
t2_table <- data.frame(intervention = as.character("altruism"),
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = format(round(diff_t2$p.value, 3), nsmall = 3),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- bind_rows(t1_table, t2_table)
diff_t1 <- t.test(difference %>% filter(intervention == "fear") %>% .$delta, mu = 0)
d_t1 <- cohensD(difference %>% filter(intervention == "fear") %>% .$delta, mu = 0)
t1_table <- data.frame(intervention = "fear",
t = round(diff_t1$statistic, 2),
df = diff_t1$parameter,
p = format(round(diff_t1$p.value, 3), nsmall = 3),
d = round(d_t1, 2),
mu = diff_t1$null.value)
diff_t2 <- t.test(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
d_t2 <- cohensD(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
t2_table <- data.frame(intervention = "altruism",
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = format(round(diff_t2$p.value, 3), nsmall = 3),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests") %>%
kable_styling()
t1_table <- data.frame(row.names = "fear",
t = round(diff_t1$statistic, 2),
df = diff_t1$parameter,
p = format(round(diff_t1$p.value, 3), nsmall = 3),
d = round(d_t1, 2),
mu = diff_t1$null.value)
diff_t2 <- t.test(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
d_t2 <- cohensD(difference %>% filter(intervention == "altruism") %>% .$delta, mu = 0)
t2_table <- data.frame(row.names = "altruism",
t = round(diff_t2$statistic, 2),
df = diff_t2$parameter,
p = format(round(diff_t2$p.value, 3), nsmall = 3),
d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests") %>%
kable_styling()
## Figure 1a - Overall intervention
fig1a_data <- df %>%
select(sub, intervention, willingness, change) %>%
pivot_longer(cols = c(willingness, change), names_to = "question", values_to = "value") %>%
mutate(question = fct_relevel(question, "willingness", "change")) %>%
group_by(intervention, question) %>%
summarise(Mean = mean(value), SD = sd(value), N = n(), SE = SD/sqrt(N)) %>%
mutate(lwr = Mean - qt(1 - (0.05 / 2), N - 1) * SE,
upr = Mean + qt(1 - (0.05 / 2), N - 1) * SE)
## Figure 1a - Overall intervention
fig1a_data <- df %>%
select(sub, intervention, willingness, change) %>%
pivot_longer(cols = c(willingness, change), names_to = "question", values_to = "value") %>%
mutate(question = fct_relevel(question, "willingness", "change")) %>%
group_by(intervention, question) %>%
summarise(Mean = mean(value), SD = sd(value), N = n(), SE = SD/sqrt(N)) %>%
mutate(lwr = Mean - qt(1 - (0.05 / 2), N - 1) * SE,
upr = Mean + qt(1 - (0.05 / 2), N - 1) * SE)
fig1a_plot <- ggplot(fig1a_data, aes(x = question, y = Mean, fill = intervention)) +
geom_bar(stat = "identity", position = position_dodge(.9)) +
geom_errorbar(aes(ymin = lwr, ymax = upr), position = position_dodge(.9), width = .1) +
scale_fill_manual(values = intervention_colors) +
ylab(NULL) +
xlab("Self-Isolation Behavior") +
facet_wrap(~question, scales = "free",
strip.position = "left",
labeller = as_labeller(c(willingness = "Rating", change = "Rating"))) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
strip.text = element_text(size = rel(1.5)),
strip.background = element_blank(),
strip.placement = "outside")
fig1a_plot
fig1a_plot <- ggplot(fig1a_data, aes(x = question, y = Mean, fill = intervention)) +
geom_bar(stat = "identity", position = position_dodge(.9)) +
geom_errorbar(aes(ymin = lwr, ymax = upr), position = position_dodge(.9), width = .1) +
scale_fill_manual(values = intervention_colors) +
ylab(NULL) +
xlab("Self-Isolation Behavior") +
facet_wrap(~question,
strip.position = "left",
labeller = as_labeller(c(willingness = "Rating", change = "Rating"))) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
strip.text = element_text(size = rel(1.5)),
strip.background = element_blank(),
strip.placement = "outside")
fig1a_plot
fig1a_plot <- ggplot(fig1a_data, aes(x = question, y = Mean, fill = intervention)) +
geom_bar(stat = "identity", position = position_dodge(.9)) +
geom_errorbar(aes(ymin = lwr, ymax = upr), position = position_dodge(.9), width = .1) +
scale_fill_manual(values = intervention_colors) +
ylab(NULL) +
xlab("Self-Isolation Behavior") +
facet_wrap(~question, scales = "free",
strip.position = "left",
labeller = as_labeller(c(willingness = "Rating", change = "Rating"))) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
strip.text = element_text(size = rel(1.5)),
strip.background = element_blank(),
strip.placement = "outside")
fig1a_plot
fig1a_plot <- ggplot(fig1a_data, aes(x = question, y = Mean, fill = intervention)) +
geom_bar(stat = "identity", position = position_dodge(.9)) +
geom_errorbar(aes(ymin = lwr, ymax = upr), position = position_dodge(.9), width = .1) +
scale_fill_manual(values = intervention_colors) +
scale_y_continuous(name = NULL, limits = c(0, 100)) +
xlab("Self-Isolation Behavior") +
facet_wrap(~question, scales = "free",
strip.position = "left",
labeller = as_labeller(c(willingness = "Rating", change = "Rating"))) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
strip.text = element_text(size = rel(1.5)),
strip.background = element_blank(),
strip.placement = "outside")
fig1a_plot
fig1a_data
# Figure 1a statistics
fig1a_data %>%
kable() %>%
kable_styline()
# Figure 1a statistics
fig1a_data %>%
kable() %>%
kable_styling()
# Figure 1a statistics
(t1_test <- t.test(willingness ~ intervention, paired = TRUE, data = t1_data))
# Figure 1a statistics
(t1_test <- t.test(willingness ~ intervention, paired = TRUE, data = df))
t.test(df$willingness[df$intervention == "fear"], df$willingness[df$intervention == "altruism"])
t.test(df$willingness[df$intervention == "fear"], df$willingness[df$intervention == "altruism"], paired = TRUE)
t1_test <- t.test(willingness ~ intervention, paired = TRUE, data = df) # cleaner paired t-test code
# t.test(df$willingness[df$intervention == "fear"], df$willingness[df$intervention == "altruism"], paired = TRUE) # same results
t1_table <- data.frame(row.names = "willingness",
t = round(t1_test$statistic, 2),
df = t1_test$parameter,
p = format(round(t1_test$p.value, 3), nsmall = 3))
t2_test <- t.test(change ~ intervention, paired = TRUE, data = df)
t2_table <- data.frame(row.names = "change",
t = round(t2_test$statistic, 2),
df = t2_test$parameter,
p = format(round(t2_test$p.value, 3), nsmall = 3))
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests") %>%
kable_styling()
## Figure 1b - Emotional experiences
# Raw emotions
fig1b_data_raw <- df %>%
mutate(valence_abs = abs(valence))
# Average emotions
fig1b_data <- fig1b_data_raw %>%
group_by(intervention) %>%
dplyr::summarise(meanValence = mean(valence), meanArousal = mean(arousal),
sdValence = sd(valence), sdArousal = sd(arousal), N = n(),
seValence = sdValence / sqrt(N), seArousal = sdArousal / sqrt(N)) %>%
mutate(ciLowerValence = meanValence - qt(1 - (0.05 / 2), N - 1) * seValence,
ciUpperValence = meanValence + qt(1 - (0.05 / 2), N - 1) * seValence,
ciLowerArousal = meanArousal - qt(1 - (0.05 / 2), N - 1) * seArousal,
ciUpperArousal = meanArousal + qt(1 - (0.05 / 2), N - 1) * seArousal)
## Figure 1b - Emotional experiences
# Raw emotions
fig1b_data_raw <- df
# Average emotions
fig1b_data <- fig1b_data_raw %>%
group_by(intervention) %>%
dplyr::summarise(meanValence = mean(valence), meanArousal = mean(arousal),
sdValence = sd(valence), sdArousal = sd(arousal), N = n(),
seValence = sdValence / sqrt(N), seArousal = sdArousal / sqrt(N)) %>%
mutate(ciLowerValence = meanValence - qt(1 - (0.05 / 2), N - 1) * seValence,
ciUpperValence = meanValence + qt(1 - (0.05 / 2), N - 1) * seValence,
ciLowerArousal = meanArousal - qt(1 - (0.05 / 2), N - 1) * seArousal,
ciUpperArousal = meanArousal + qt(1 - (0.05 / 2), N - 1) * seArousal)
fig1b_plot <- ggplot(fig1b_data_raw, aes(x = valence, y = arousal, color = intervention)) + geom_point(alpha = .1) + # all data points
geom_point(data = fig1b_data, aes(x = meanValence, y = meanArousal, color = intervention), size = 1) + # averages
geom_errorbar(data = fig1b_data, aes(x = meanValence, y = meanArousal, ymin = ciLowerArousal, ymax = ciUpperArousal), width = 0) + # CIs
geom_errorbarh(data = fig1b_data, aes(x = NULL, y = meanArousal, xmin = ciLowerValence, xmax = ciUpperValence), height = 0) + # CIs
geom_text_repel(data = fig1b_data, aes(x = meanValence, y = meanArousal, color = intervention, label = intervention),
segment.colour = NA, point.padding = .3, show.legend = FALSE, size = 8, nudge_y = 1, direction = "y") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
coord_fixed() +
scale_color_manual(values = intervention_colors) +
scale_y_continuous(name = "Arousal", limits = c(-250, 250), breaks = seq(-200, 200, by = 100)) +
scale_x_continuous(name = "Valence", limits = c(-250, 250), breaks = seq(-200, 200, by = 100)) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
fig1b_plot
# Figure 1b descriptives
fig1b_data %>%
kable() %>%
kable_styling()
## Figure 1b - Emotional experiences
# Average emotions
fig1b_data <- df %>%
group_by(intervention) %>%
dplyr::summarise(meanValence = mean(valence), meanArousal = mean(arousal),
sdValence = sd(valence), sdArousal = sd(arousal), N = n(),
seValence = sdValence / sqrt(N), seArousal = sdArousal / sqrt(N)) %>%
mutate(ciLowerValence = meanValence - qt(1 - (0.05 / 2), N - 1) * seValence,
ciUpperValence = meanValence + qt(1 - (0.05 / 2), N - 1) * seValence,
ciLowerArousal = meanArousal - qt(1 - (0.05 / 2), N - 1) * seArousal,
ciUpperArousal = meanArousal + qt(1 - (0.05 / 2), N - 1) * seArousal)
fig1b_plot <- ggplot(df, aes(x = valence, y = arousal, color = intervention)) + geom_point(alpha = .1) + # all data points
geom_point(data = fig1b_data, aes(x = meanValence, y = meanArousal, color = intervention), size = 1) + # averages
geom_errorbar(data = fig1b_data, aes(x = meanValence, y = meanArousal, ymin = ciLowerArousal, ymax = ciUpperArousal), width = 0) + # CIs
geom_errorbarh(data = fig1b_data, aes(x = NULL, y = meanArousal, xmin = ciLowerValence, xmax = ciUpperValence), height = 0) + # CIs
geom_text_repel(data = fig1b_data, aes(x = meanValence, y = meanArousal, color = intervention, label = intervention),
segment.colour = NA, point.padding = .3, show.legend = FALSE, size = 8, nudge_y = 1, direction = "y") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
coord_fixed() +
scale_color_manual(values = intervention_colors) +
scale_y_continuous(name = "Arousal", limits = c(-250, 250), breaks = seq(-200, 200, by = 100)) +
scale_x_continuous(name = "Valence", limits = c(-250, 250), breaks = seq(-200, 200, by = 100)) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
fig1b_plot
# Figure 1b descriptives
fig1b_data %>%
kable() %>%
kable_styling()
t1_test <- t.test(arousal ~ intervention, paired = TRUE, data = df)
t1_d <- cohensD(x = df$arousal[df$intervention == "fear"], y = df$arousal[df$intervention == "altruism"], method = "paired") # less clean but works with cohenD function
t2_test <- t.test(valence ~ intervention, paired = TRUE, data = df)
t2_d <- cohensD(x = df$valence[df$intervention == "fear"], y = df$valence[df$intervention == "altruism"], method = "paired")
t3_test <- t.test(abs(valence) ~ intervention, paired = TRUE, data = df)
t3_d <- cohensD(x = abs(df$valence[df$intervention == "fear"]), y = abs(df$valence[df$intervention == "altruism"]), method = "paired")
t1_test <- t.test(arousal ~ intervention, paired = TRUE, data = df)
t1_d <- cohensD(x = df$arousal[df$intervention == "fear"], y = df$arousal[df$intervention == "altruism"], method = "paired") # less clean but works with cohenD function
t1_table <- data.frame(row.names = "arousal",
t = round(t1_test$statistic, 2),
df = t1_test$parameter,
p = format(round(t1_test$p.value, 3), nsmall = 3),
d = round(t1_d, 2))
t2_test <- t.test(valence ~ intervention, paired = TRUE, data = df)
t2_d <- cohensD(x = df$valence[df$intervention == "fear"], y = df$valence[df$intervention == "altruism"], method = "paired")
t2_table <- data.frame(row.names = "arousal",
t = round(t2_test$statistic, 2),
df = t2_test$parameter,
p = format(round(t2_test$p.value, 3), nsmall = 3),
d = round(t2_d, 2))
t3_test <- t.test(abs(valence) ~ intervention, paired = TRUE, data = df)
t3_d <- cohensD(x = abs(df$valence[df$intervention == "fear"]), y = abs(df$valence[df$intervention == "altruism"]), method = "paired")
t3_table <- data.frame(row.names = "arousal",
t = round(t3_test$statistic, 2),
df = t3_test$parameter,
p = format(round(t3_test$p.value, 3), nsmall = 3),
d = round(t3_d, 2))
t_tables <- rbind(t1_table, t2_table, t3_table)
t_tables %>%
kable(caption = "Paired-sample t-tests") %>%
kable_styling()
t1_table <- data.frame(row.names = "arousal",
t = round(t1_test$statistic, 2),
df = t1_test$parameter,
p = format(round(t1_test$p.value, 3), nsmall = 3),
d = round(t1_d, 2))
t2_test <- t.test(valence ~ intervention, paired = TRUE, data = df)
t2_d <- cohensD(x = df$valence[df$intervention == "fear"], y = df$valence[df$intervention == "altruism"], method = "paired")
t2_table <- data.frame(row.names = "valence",
t = round(t2_test$statistic, 2),
df = t2_test$parameter,
p = format(round(t2_test$p.value, 3), nsmall = 3),
d = round(t2_d, 2))
t3_test <- t.test(abs(valence) ~ intervention, paired = TRUE, data = df)
t3_d <- cohensD(x = abs(df$valence[df$intervention == "fear"]), y = abs(df$valence[df$intervention == "altruism"]), method = "paired")
t3_table <- data.frame(row.names = "abs(valence)",
t = round(t3_test$statistic, 2),
df = t3_test$parameter,
p = format(round(t3_test$p.value, 3), nsmall = 3),
d = round(t3_d, 2))
t_tables <- rbind(t1_table, t2_table, t3_table)
t_tables %>%
kable(caption = "Paired-sample t-tests") %>%
kable_styling()
t1_test
t1_test <- t.test(df$arousal[df$intervention == "fear"], df$arousal[df$intervention == "altruism"], paired = TRUE, data = df)
t1_test
t1_test <- t.test(df$arousal[df$intervention == "fear"], df$arousal[df$intervention == "altruism"], paired = TRUE, data = df)
t1_d <- cohensD(x = df$arousal[df$intervention == "fear"], y = df$arousal[df$intervention == "altruism"], method = "paired") # less clean but works with cohenD function
t1_table <- data.frame(row.names = "arousal",
t = round(t1_test$statistic, 2),
df = t1_test$parameter,
p = format(round(t1_test$p.value, 3), nsmall = 3),
d = round(t1_d, 2))
t2_test <- t.test(df$valence[df$intervention == "fear"], df$valence[df$intervention == "altruism"], paired = TRUE, data = df)
t2_d <- cohensD(x = df$valence[df$intervention == "fear"], y = df$valence[df$intervention == "altruism"], method = "paired")
t2_table <- data.frame(row.names = "valence",
t = round(t2_test$statistic, 2),
df = t2_test$parameter,
p = format(round(t2_test$p.value, 3), nsmall = 3),
d = round(t2_d, 2))
t3_test <- t.test(abs(df$valence[df$intervention == "fear"]), abs(df$valence[df$intervention == "altruism"]), paired = TRUE, data = df)
t3_d <- cohensD(x = abs(df$valence[df$intervention == "fear"]), y = abs(df$valence[df$intervention == "altruism"]), method = "paired")
t3_table <- data.frame(row.names = "abs(valence)",
t = round(t3_test$statistic, 2),
df = t3_test$parameter,
p = format(round(t3_test$p.value, 3), nsmall = 3),
d = round(t3_d, 2))
t_tables <- rbind(t1_table, t2_table, t3_table)
t_tables %>%
kable(caption = "Paired-sample t-tests") %>%
kable_styling()
## Figure 2 plot
fig2_theme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.75)),
legend.text = element_text(size = rel(1.5)),
legend.title = element_text(size = rel(1.75)))
# Knitr options
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# Libraries
library(here) # relative paths
library(tidyverse) # tidy functions
library(knitr) # knit functions
library(kableExtra) # extra markdown functions
library(lsr) # cohenD()
library(broom.mixed) # tidy()
library(AICcmodavg) # predictSE()
#library(ggrepel)
# Aesthetics
intervention_colors <- c("#66c2a5", "#f46d43") # Altruism, Fear
## Figure 2 data
fig2_data <- df %>%
mutate(willingness_scale = as.numeric(scale(willingness)),
change_scale = as.numeric(scale(change)),
valence_scale = as.numeric(scale(valence, center = F)), # scale but not mean-center (0 = neutral)
arousal_scale = as.numeric(scale(arousal, center = F))) # scale but not mean-center (0 = neutral)
## Figure 2 plot
fig2_theme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.75)),
legend.text = element_text(size = rel(1.5)),
legend.title = element_text(size = rel(1.75)))
range_valence <- range(fig2_data$valence_scale)
range_arousal <- range(fig2_data$arousal_scale)
xRange1 <- seq(range_valence[1], range_valence[2], by = .1)
xRange2 <- seq(range_arousal[1], range_arousal[2], by = .1)
xRange3 <- c("altruism", "fear")
v_pred <- with(fig2_data, expand.grid(valence_scale = xRange1, arousal_scale = 0, intervention = xRange3))
a_pred <- with(fig2_data, expand.grid(valence_scale = 0, arousal_scale = xRange2, intervention = xRange3))
# Mixed-effect model (summary printed later)
m_fig2 <- nlme::lme(willingness_scale ~ intervention*valence_scale + intervention*arousal_scale, random = ~ 1 + intervention| sub,
data = fig2_data)
# Draw graphs
v_results <- AICcmodavg::predictSE(m_fig2, newdata = v_pred)
a_results <- AICcmodavg::predictSE(m_fig2, newdata = a_pred)
v_pred$fit <- v_results$fit
v_pred$se <- v_results$se.fit
a_pred$fit <- a_results$fit
a_pred$se <- a_results$se.fit
arousal_colors <- c("#fc9272", "#de2d26")
valence_colors <- c("#bcbddc", "#756bb1")
fig2a_plot <- ggplot() +
# Arousal
geom_line(data = a_pred, aes(x = arousal_scale, y = fit, color = intervention), size = 2) +
geom_ribbon(data = a_pred, aes(x = arousal_scale, ymax = fit + se, ymin = fit - se, fill = intervention), alpha = .1) +
scale_x_continuous(name = "Arousal", limits = c(-1.7, 1.7), breaks = c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5)) +
scale_y_continuous(name = "Willingness", limits = c(-.4, .1), breaks = c(-0.4, -0.3, -0.2, -0.1, 0, 0.1)) +
scale_color_manual(values = arousal_colors) +
scale_fill_manual(values = arousal_colors) +
geom_hline(yintercept = 0, lty = 3) +
geom_vline(xintercept = 0, lty = 3) +
fig2_theme
fig2b_plot <- ggplot() +
# Valence
geom_line(data = v_pred, aes(x = valence_scale, y = fit, color = intervention), size = 2) +
geom_ribbon(data = v_pred, aes(x = valence_scale, ymax = fit + se, ymin = fit - se, fill = intervention), alpha = .1) +
scale_x_continuous(name = "Valence", limits = c(-1.7, 1.7), breaks = c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5)) +
scale_y_continuous(name = "Willingness", limits = c(-.4, .1), breaks = c(-0.4, -0.3, -0.2, -0.1, 0, 0.1)) +
scale_color_manual(values = valence_colors) +
scale_fill_manual(values = valence_colors) +
geom_hline(yintercept = 0, lty = 3) +
geom_vline(xintercept = 0, lty = 3) +
fig2_theme
fig2 <- plot_grid(fig2a_plot, fig2b_plot)
fig2
library(here) # relative paths
library(tidyverse) # tidy functions
library(knitr) # knit functions
library(kableExtra) # extra markdown functions
library(lsr) # cohenD()
library(broom.mixed) # tidy()
library(AICcmodavg) # predictSE()
library(cowplot) # plot_grid()
fig2 <- plot_grid(fig2a_plot, fig2b_plot)
fig2
fig2
# Willngness model
broom.mixed::tidy(m_fig2, effect = "fixed") %>%
mutate(
p.value = format(round(p.value, digits=3), nsmall = 3),
p.label = case_when(p.value <= .001 ~ "***",
p.value <= .01 ~ "**",
p.value <= .05 ~ "*",
p.value > .05 ~ "n.s."),
p.value = cell_spec(p.value,
"html",
color = "white",
background = if_else(p.value < 0.05, "red", "black")),
p.label = cell_spec(p.label,
"html",
color = "white",
background = if_else(p.label != "n.s.", "red", "black"))
) %>%
kable(format = "html",
caption = "Willingness Model ",
escape = FALSE) %>% # escape = FALSE critical to avoid escaping special characters in the HTML
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
footnote(general = "Formula: willingness_scale ~ intervention*valence_scale + intervention*arousal_scale + (1 + intervention|sub)")
