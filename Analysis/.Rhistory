d = round(d_t2, 2),
mu = diff_t2$null.value)
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Average stay_home behavior
stay_home <- df %>%
select(sub, stay_home) %>%
unique() %>%
summarise(avg_stay_home = mean(stay_home))
stay_home %>%
kable(caption = "Stay_Home Descriptive") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Knitr options
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# Save plots or not
save_plots <- FALSE  # if you want to generate new plots make TRUE
# Libraries
library(here)         # relative paths
library(tidyverse)    # tidy functions
library(knitr)        # knit functions
library(kableExtra)   # extra markdown functions
library(lsr)          # cohenD()
library(broom.mixed)  # tidy()
library(AICcmodavg)   # predictSE()
library(cowplot)      # plot_grid()
library(ggrepel)      # geom_text_repel
# Specify relative pathing
dir_analysis <- here() # should be where analysis script is stored
dir_parent <- dir_analysis %>% str_remove("/Analysis")
dir_data <- paste0(dir_parent, "/Data")
dir_graphs <- paste0(dir_parent, "/Graphs")
# Load data
df <- read_csv(paste0(dir_data, "/covid_intervention.csv"))
# Glimpse of data
head(df) %>%
kable(caption = "Data glimpse") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Knitr options
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# Save plots or not
save_plots <- FALSE  # if you want to generate new plots make TRUE
# Libraries
library(here)         # relative paths
library(tidyverse)    # tidy functions
library(knitr)        # knit functions
library(kableExtra)   # extra markdown functions
library(lsr)          # cohenD()
library(broom.mixed)  # tidy()
library(AICcmodavg)   # predictSE()
library(cowplot)      # plot_grid()
library(ggrepel)      # geom_text_repel
# Specify relative pathing
dir_analysis <- here() # should be where analysis script is stored
dir_parent <- dir_analysis %>% str_remove("/Analysis")
dir_data <- paste0(dir_parent, "/Data")
dir_graphs <- paste0(dir_parent, "/Graphs")
# Load data
df <- read_csv(paste0(dir_data, "/covid_intervention.csv"))
# Glimpse of data
head(df) %>%
kable(caption = "Data glimpse") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Average stay_home behavior
stay_home <- df %>%
select(sub, stay_home) %>%
unique() %>%
summarise(avg_stay_home = mean(stay_home))
stay_home %>%
kable(caption = "Stay_Home Descriptive") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Average stay_home behavior
stay_home <- df %>%
select(sub, stay_home) %>%
unique() %>%
summarise(avg_stay_home = mean(stay_home))
stay_home %>%
kable(caption = "Stay_Home Descriptive") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Difference measures
difference <- df %>%
mutate(delta = willingness - stay_home,
delta2 = willingness - mean_behavior)
# Difference descriptives
difference_avg <- difference %>%
group_by(intervention) %>%
summarise(avg_diff = mean(delta), sd_diff = sd(delta), N = n(),
avg_diff2 = mean(delta2), sd_diff = sd(delta2))
difference_avg %>%
kable(caption = "Difference descriptives") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Difference statistics
diff_t1a <- t.test(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
# Difference descriptives
difference_avg <- difference %>%
group_by(intervention) %>%
summarise(avg_diff = mean(delta), sd_diff = sd(delta), N = n())
difference_avg %>%
kable(caption = "Difference descriptives") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Difference descriptives
difference_avg <- difference %>%
group_by(intervention) %>%
summarise(avg_diff = round(mean(delta), 2), sd_diff = round(sd(delta), 2), N = n())
difference_avg %>%
kable(caption = "Difference descriptives") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Difference statistics
diff_t1a <- t.test(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
d_t1a <- cohensD(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
diff_t1b <- t.test(difference %>% filter(intervention == "threat") %>% .$delta2, mu = 0)
d_t1b <- cohensD(difference %>% filter(intervention == "threat") %>% .$delta2, mu = 0)
# Manually generate tables for easier viewing
t1_table <- data.frame(row.names = "threat",
t = round(diff_t1a$statistic, 2),
df = diff_t1a$parameter,
p = format(round(diff_t1a$p.value, 3), nsmall = 3),
d = round(d_t1a, 2),
mu = diff_t1a$null.value)
diff_t2a <- t.test(difference %>% filter(intervention == "prosocial") %>% .$delta, mu = 0)
d_t2a <- cohensD(difference %>% filter(intervention == "prosocial") %>% .$delta, mu = 0)
diff_t2b <- t.test(difference %>% filter(intervention == "prosocial") %>% .$delta2, mu = 0)
d_t2b <- cohensD(difference %>% filter(intervention == "prosocial") %>% .$delta2, mu = 0)
t2_table <- data.frame(row.names = "prosocial",
t = round(diff_t2a$statistic, 2),
df = diff_t2a$parameter,
p = format(round(diff_t2a$p.value, 3), nsmall = 3),
d = round(d_t2a, 2),
mu = diff_t2a$null.value)
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
t_tables %>%
kable(caption = "One-sample t-tests comparing `avg_diff` to 0") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
d_t2b
difference_avg <- difference %>%
group_by(intervention) %>%
summarise(avg_diff = round(mean(delta), 2), sd_diff = round(sd(delta), 2), N = n())
difference_avg %>%
kable(caption = "Difference descriptives") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Difference statistics
diff_t1a <- t.test(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
d_t1a <- cohensD(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
diff_t1b <- t.test(difference %>% filter(intervention == "threat") %>% .$delta2, mu = 0)
d_t1b <- cohensD(difference %>% filter(intervention == "threat") %>% .$delta2, mu = 0)
# Manually generate tables for easier viewing
t1_table <- data.frame(row.names = "threat",
t = round(diff_t1a$statistic, 2),
df = diff_t1a$parameter,
p = format(round(diff_t1a$p.value, 3), nsmall = 3),
d = round(d_t1a, 2),
mu = diff_t1a$null.value,
cohen_d = round(d_t1a, 2))
diff_t2a <- t.test(difference %>% filter(intervention == "prosocial") %>% .$delta, mu = 0)
d_t2a <- cohensD(difference %>% filter(intervention == "prosocial") %>% .$delta, mu = 0)
diff_t2b <- t.test(difference %>% filter(intervention == "prosocial") %>% .$delta2, mu = 0)
d_t2b <- cohensD(difference %>% filter(intervention == "prosocial") %>% .$delta2, mu = 0)
t2_table <- data.frame(row.names = "prosocial",
t = round(diff_t2a$statistic, 2),
df = diff_t2a$parameter,
p = format(round(diff_t2a$p.value, 3), nsmall = 3),
d = round(d_t2a, 2),
mu = diff_t2a$null.value,
cohen_d = round(d_t2a, 2))
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests comparing `avg_diff` to 0") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Average stay_home behavior
stay_home <- df %>%
select(sub, stay_home) %>%
unique() %>%
summarise(avg_stay_home = mean(stay_home))
stay_home %>%
kable(caption = "Stay_Home Descriptive") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Difference measures
difference <- df %>%
mutate(delta = willingness - stay_home,
delta2 = willingness - mean_behavior)
# Difference descriptives
difference_avg <- difference %>%
group_by(intervention) %>%
summarise(avg_diff = round(mean(delta), 2), sd_diff = round(sd(delta), 2), N = n())
difference_avg %>%
kable(caption = "Difference descriptives") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Difference statistics
diff_t1a <- t.test(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
d_t1a <- cohensD(difference %>% filter(intervention == "threat") %>% .$delta, mu = 0)
# Manually generate tables for easier viewing
t1_table <- data.frame(row.names = "threat",
t = round(diff_t1a$statistic, 2),
df = diff_t1a$parameter,
p = format(round(diff_t1a$p.value, 3), nsmall = 3),
d = round(d_t1a, 2),
mu = diff_t1a$null.value,
cohen_d = round(d_t1a, 2))
diff_t2a <- t.test(difference %>% filter(intervention == "prosocial") %>% .$delta, mu = 0)
d_t2a <- cohensD(difference %>% filter(intervention == "prosocial") %>% .$delta, mu = 0)
t2_table <- data.frame(row.names = "prosocial",
t = round(diff_t2a$statistic, 2),
df = diff_t2a$parameter,
p = format(round(diff_t2a$p.value, 3), nsmall = 3),
d = round(d_t2a, 2),
mu = diff_t2a$null.value,
cohen_d = round(d_t2a, 2))
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "One-sample t-tests comparing `avg_diff` to 0") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Same analysis with `mean_behavior` difference to 0
diff_t1b <- t.test(difference %>% filter(intervention == "threat") %>% .$delta2, mu = 0)
d_t1b <- cohensD(difference %>% filter(intervention == "threat") %>% .$delta2, mu = 0)
diff_t2b <- t.test(difference %>% filter(intervention == "prosocial") %>% .$delta2, mu = 0)
d_t2b <- cohensD(difference %>% filter(intervention == "prosocial") %>% .$delta2, mu = 0)
d_t1b
d_t2b
## Figure 1a - Overall intervention
fig1a_data <- df %>%
select(sub, intervention, willingness, change) %>%
pivot_longer(cols = c(willingness, change), names_to = "question", values_to = "value") %>%
mutate(question = fct_relevel(question, "willingness", "change")) %>%
group_by(intervention, question) %>%
summarise(Mean = mean(value), SD = sd(value), N = n(), SE = SD/sqrt(N)) %>%
mutate(lwr = Mean - qt(1 - (0.05 / 2), N - 1) * SE,
upr = Mean + qt(1 - (0.05 / 2), N - 1) * SE)
# Aesthetics
intervention_colors <- c("#66c2a5", "#f46d43") # prosocial, threat
fig1a_plot <- ggplot(fig1a_data, aes(x = question, y = Mean, fill = intervention)) +
geom_bar(stat = "identity", position = position_dodge(.9)) +
geom_errorbar(aes(ymin = lwr, ymax = upr), position = position_dodge(.9), width = .1) +
scale_fill_manual(values = intervention_colors) +
scale_y_continuous(name = NULL, limits = c(0, 100)) +
xlab("Self-Isolation Behavior") +
facet_wrap(~question, scales = "free",
strip.position = "left",
labeller = as_labeller(c(willingness = "Rating", change = "Rating"))) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text = element_text(size = rel(1.5)),
strip.background = element_blank(),
strip.placement = "outside")
fig1a_plot
if (save_plots == TRUE) {
ggsave(filename = paste0(dir_graphs, "/fig1a.pdf"), plot = fig1a_plot, width = 6, height = 6)
}
# Figure 1a descriptives
fig1a_data %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Figure 1a statistics
t1_test <- t.test(willingness ~ intervention, paired = TRUE, data = df) # cleaner paired t-test code
# t.test(df$willingness[df$intervention == "threat"], df$willingness[df$intervention == "prosocial"], paired = TRUE) # same results
t1_table <- data.frame(row.names = "willingness",
t = round(t1_test$statistic, 2),
df = t1_test$parameter,
p = format(round(t1_test$p.value, 3), nsmall = 3))
t2_test <- t.test(change ~ intervention, paired = TRUE, data = df)
t2_table <- data.frame(row.names = "change",
t = round(t2_test$statistic, 2),
df = t2_test$parameter,
p = format(round(t2_test$p.value, 3), nsmall = 3))
t_tables <- rbind(t1_table, t2_table)
t_tables %>%
kable(caption = "Paired-sample t-tests") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
fig1a_plot
## Figure 1b - Emotional experiences
# Average emotions
fig1b_data <- df %>%
group_by(intervention) %>%
dplyr::summarise(meanValence = mean(valence), meanArousal = mean(arousal),
sdValence = sd(valence), sdArousal = sd(arousal), N = n(),
seValence = sdValence / sqrt(N), seArousal = sdArousal / sqrt(N)) %>%
mutate(ciLowerValence = meanValence - qt(1 - (0.05 / 2), N - 1) * seValence,
ciUpperValence = meanValence + qt(1 - (0.05 / 2), N - 1) * seValence,
ciLowerArousal = meanArousal - qt(1 - (0.05 / 2), N - 1) * seArousal,
ciUpperArousal = meanArousal + qt(1 - (0.05 / 2), N - 1) * seArousal)
fig1b_plot <- ggplot(df, aes(x = valence, y = arousal, color = intervention)) + geom_point(alpha = .1) + # all data points
geom_point(data = fig1b_data, aes(x = meanValence, y = meanArousal, color = intervention), size = 1) + # averages
geom_errorbar(data = fig1b_data, aes(x = meanValence, y = meanArousal, ymin = ciLowerArousal, ymax = ciUpperArousal), width = 0) + # CIs
geom_errorbarh(data = fig1b_data, aes(x = NULL, y = meanArousal, xmin = ciLowerValence, xmax = ciUpperValence), height = 0) + # CIs
geom_text_repel(data = fig1b_data, aes(x = meanValence, y = meanArousal, color = intervention, label = intervention),
segment.colour = NA, point.padding = .3, show.legend = FALSE, size = 8, nudge_y = 1, direction = "y") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
coord_fixed() +
scale_color_manual(values = intervention_colors) +
scale_y_continuous(name = "Arousal", limits = c(-250, 250), breaks = seq(-200, 200, by = 100)) +
scale_x_continuous(name = "Valence", limits = c(-250, 250), breaks = seq(-200, 200, by = 100)) +
theme_bw() +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.25)),
legend.title = element_text(size = rel(1.5)),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
fig1b_plot
fig1b_plot
ggsave(filename = paste0(dir_graphs, "/fig1b.pdf"), plot = fig1b_plot, width = 6, height = 6)
if (save_plots == TRUE) {
ggsave(filename = paste0(dir_graphs, "/fig1b.pdf"), plot = fig1b_plot, width = 6, height = 6)
}
# Figure 1b descriptives
fig1b_data %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Figure 1b statistics
t1_test <- t.test(df$arousal[df$intervention == "threat"], df$arousal[df$intervention == "prosocial"], paired = TRUE, data = df)
t1_d <- cohensD(x = df$arousal[df$intervention == "threat"], y = df$arousal[df$intervention == "prosocial"], method = "paired") # less clean but works with cohenD function
t1_table <- data.frame(row.names = "arousal",
t = round(t1_test$statistic, 2),
df = t1_test$parameter,
p = format(round(t1_test$p.value, 3), nsmall = 3),
d = round(t1_d, 2))
t2_test <- t.test(df$valence[df$intervention == "threat"], df$valence[df$intervention == "prosocial"], paired = TRUE, data = df)
t2_d <- cohensD(x = df$valence[df$intervention == "threat"], y = df$valence[df$intervention == "prosocial"], method = "paired")
t2_table <- data.frame(row.names = "valence",
t = round(t2_test$statistic, 2),
df = t2_test$parameter,
p = format(round(t2_test$p.value, 3), nsmall = 3),
d = round(t2_d, 2))
t3_test <- t.test(abs(df$valence[df$intervention == "threat"]), abs(df$valence[df$intervention == "prosocial"]), paired = TRUE, data = df)
t3_d <- cohensD(x = abs(df$valence[df$intervention == "threat"]), y = abs(df$valence[df$intervention == "prosocial"]), method = "paired")
t3_table <- data.frame(row.names = "abs(valence)",
t = round(t3_test$statistic, 2),
df = t3_test$parameter,
p = format(round(t3_test$p.value, 3), nsmall = 3),
d = round(t3_d, 2))
t_tables <- rbind(t1_table, t2_table, t3_table)
t_tables %>%
kable(caption = "Paired-sample t-tests") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## Figure 2 data
fig2_data <- df %>%
mutate(willingness_scale = as.numeric(scale(willingness)),
change_scale = as.numeric(scale(change)),
valence_scale = as.numeric(scale(valence, center = F)), # scale but not mean-center (0 = neutral)
arousal_scale = as.numeric(scale(arousal, center = F)), # scale but not mean-center (0 = neutral)
intervention = fct_relevel(intervention, "threat", "prosocial")) # reference point threat
## Figure 2 plot
fig2_theme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.75)),
legend.text = element_text(size = rel(1.5)),
legend.title = element_text(size = rel(1.75)))
range_valence <- range(fig2_data$valence_scale)
range_arousal <- range(fig2_data$arousal_scale)
xRange1 <- seq(range_valence[1], range_valence[2], by = .1)
xRange2 <- seq(range_arousal[1], range_arousal[2], by = .1)
xRange3 <- c("prosocial", "threat")
v_pred <- with(fig2_data, expand.grid(valence_scale = xRange1, arousal_scale = 0, intervention = xRange3))
a_pred <- with(fig2_data, expand.grid(valence_scale = 0, arousal_scale = xRange2, intervention = xRange3))
# Mixed-effect model (summary printed later)
m_fig2 <- nlme::lme(willingness_scale ~ intervention*valence_scale + intervention*arousal_scale, random = ~ 1 + intervention| sub,
data = fig2_data)
# Draw graphs
v_results <- AICcmodavg::predictSE(m_fig2, newdata = v_pred)
a_results <- AICcmodavg::predictSE(m_fig2, newdata = a_pred)
v_pred$fit <- v_results$fit
v_pred$se <- v_results$se.fit
a_pred$fit <- a_results$fit
a_pred$se <- a_results$se.fit
arousal_colors <- c("#fc9272", "#de2d26")
valence_colors <- c("#bcbddc", "#756bb1")
# Simple effects - change reference category
fig2_data_s <- fig2_data %>% mutate(intervention = fct_relevel(intervention, "prosocial", "threat"))
m_fig2_s <- nlme::lme(willingness_scale ~ intervention*valence_scale + intervention*arousal_scale,
random = ~ 1 + intervention| sub, data = fig2_data_s)
fig2a_plot <- ggplot() +
# Arousal
geom_line(data = a_pred, aes(x = arousal_scale, y = fit, color = intervention), size = 2) +
geom_ribbon(data = a_pred, aes(x = arousal_scale, ymax = fit + se, ymin = fit - se, fill = intervention), alpha = .1) +
scale_x_continuous(name = "Arousal", limits = c(-1.7, 1.7), breaks = c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5)) +
scale_y_continuous(name = "Willingness", limits = c(-.4, .1), breaks = c(-0.4, -0.3, -0.2, -0.1, 0, 0.1)) +
scale_color_manual(values = arousal_colors) +
scale_fill_manual(values = arousal_colors) +
geom_hline(yintercept = 0, lty = 3) +
geom_vline(xintercept = 0, lty = 3) +
# Significance
annotate(geom = "text", label = "n.s.", x = -.25, y = -.035, hjust = 1, color = arousal_colors[2], angle = 20) + # threat
annotate(geom = "text", label = "***", x = .75, y = -.14, hjust = 1, color = arousal_colors[1], angle = 70) + # prosocial
fig2_theme
fig2a_plot
fig2a_plot
summary(m_fig2_s)
if (save_plots == TRUE) {
ggsave(filename = paste0(dir_graphs, "/fig2a.pdf"), plot = fig2a_plot, width = 8, height = 6)
}
fig2b_plot <- ggplot() +
# Valence
geom_line(data = v_pred, aes(x = valence_scale, y = fit, color = intervention), size = 2) +
geom_ribbon(data = v_pred, aes(x = valence_scale, ymax = fit + se, ymin = fit - se, fill = intervention), alpha = .1) +
scale_x_continuous(name = "Valence", limits = c(-1.7, 1.7), breaks = c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5)) +
scale_y_continuous(name = "Willingness", limits = c(-.4, .1), breaks = c(-0.4, -0.3, -0.2, -0.1, 0, 0.1)) +
scale_color_manual(values = valence_colors) +
scale_fill_manual(values = valence_colors) +
geom_hline(yintercept = 0, lty = 3) +
geom_vline(xintercept = 0, lty = 3) +
# Significance
annotate(geom = "text", label = "n.s.", x = -.35, y = -.1, hjust = 1, color = valence_colors[2], angle = -35) + # threat
annotate(geom = "text", label = "**", x = -.15, y = -.23, hjust = 1, color = valence_colors[1], angle = 70) + # prosocial
fig2_theme
fig2b_plot
if (save_plots == TRUE) {
ggsave(filename = paste0(dir_graphs, "/fig2b.pdf"), plot = fig2b_plot, width = 8, height = 6)
}
# Willngness model
broom.mixed::tidy(m_fig2, effect = "fixed") %>%
mutate(
p.value = format(round(p.value, digits=3), nsmall = 3),
p.label = case_when(p.value <= .001 ~ "***",
p.value <= .01 ~ "**",
p.value <= .05 ~ "*",
p.value > .05 ~ "n.s."),
p.value = cell_spec(p.value,
"html",
color = "white",
background = if_else(p.value < 0.05, "red", "black")),
p.label = cell_spec(p.label,
"html",
color = "white",
background = if_else(p.label != "n.s.", "red", "black"))
) %>%
kable(format = "html",
caption = "Willingness Model ",
escape = FALSE) %>% # escape = FALSE critical to avoid escaping special characters in the HTML
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
footnote(general = "Formula: willingness_scale ~ intervention * valence_scale + intervention * arousal_scale + (1 + intervention|sub)\n Intervention reference category is threat")
# Mixed-effect model (summary printed later)
m_fig3 <- nlme::lme(change_scale ~ intervention*valence_scale + intervention*arousal_scale, random = ~ 1 + intervention| sub,
data = fig2_data)
v_results <- AICcmodavg::predictSE(m_fig3, newdata = v_pred)
a_results <- AICcmodavg::predictSE(m_fig3, newdata = a_pred)
v_pred$fit <- v_results$fit
v_pred$se <- v_results$se.fit
a_pred$fit <- a_results$fit
a_pred$se <- a_results$se.fit
# Simple effects - change reference category
fig3_data_s <- fig2_data %>% mutate(intervention = fct_relevel(intervention, "prosocial", "threat"))
m_fig3_s <- nlme::lme(change_scale ~ intervention*valence_scale + intervention*arousal_scale,
random = ~ 1 + intervention| sub, data = fig3_data_s)
fig3a_plot <- ggplot() +
# Arousal
geom_line(data = a_pred, aes(x = arousal_scale, y = fit, color = intervention), size = 2) +
geom_ribbon(data = a_pred, aes(x = arousal_scale, ymax = fit + se, ymin = fit - se, fill = intervention), alpha = .1) +
scale_x_continuous(name = "Arousal", limits = c(-1.7, 1.7), breaks = c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5)) +
scale_y_continuous(name = "Change", limits = c(-.6, .13), breaks = c(-0.6, -0.4, -0.2, 0.0)) +
scale_color_manual(values = arousal_colors) +
scale_fill_manual(values = arousal_colors) +
geom_hline(yintercept = 0, lty = 3) +
geom_vline(xintercept = 0, lty = 3) +
# Significance
annotate(geom = "text", label = "*", x = -.25, y = -.035, hjust = 1, color = arousal_colors[2], angle = 20) + # threat
annotate(geom = "text", label = "*", x = -.25, y = -.35, hjust = 1, color = arousal_colors[1], angle = 70) + # prosocial
fig2_theme
fig3a_plot
if (save_plots == TRUE) {
ggsave(filename = paste0(dir_graphs, "/fig3a.pdf"), plot = fig3a_plot, width = 8, height = 6)
}
fig3b_plot <- ggplot() +
# Valence
geom_line(data = v_pred, aes(x = valence_scale, y = fit, color = intervention), size = 2) +
geom_ribbon(data = v_pred, aes(x = valence_scale, ymax = fit + se, ymin = fit - se, fill = intervention), alpha = .1) +
scale_x_continuous(name = "Valence", limits = c(-1.7, 1.7), breaks = c(-1.5, -1.0, -0.5, 0, 0.5, 1.0, 1.5)) +
scale_y_continuous(name = "Change", limits = c(-.6, .13), breaks = c(-0.6, -0.4, -0.2, 0.0)) +
scale_color_manual(values = valence_colors) +
scale_fill_manual(values = valence_colors) +
geom_hline(yintercept = 0, lty = 3) +
geom_vline(xintercept = 0, lty = 3) +
# Significance
annotate(geom = "text", label = "n.s.", x = -.35, y = -.13, hjust = 1, color = valence_colors[2], angle = -35) + # threat
annotate(geom = "text", label = "***", x = -.15, y = -.4, hjust = 1, color = valence_colors[1], angle = 70) + # prosocial
fig2_theme
if (save_plots == TRUE) {
ggsave(filename = paste0(dir_graphs, "/fig3b.pdf"), plot = fig3b_plot, width = 8, height = 6)
}
# Change model
broom.mixed::tidy(m_fig3, effect = "fixed") %>%
mutate(
p.value = format(round(p.value, digits=3), nsmall = 3),
p.label = case_when(p.value <= .001 ~ "***",
p.value <= .01 ~ "**",
p.value <= .05 ~ "*",
p.value > .05 ~ "n.s."),
p.value = cell_spec(p.value,
"html",
color = "white",
background = if_else(p.value < 0.05, "red", "black")),
p.label = cell_spec(p.label,
"html",
color = "white",
background = if_else(p.label != "n.s.", "red", "black"))
) %>%
kable(format = "html",
caption = "Change Model ",
escape = FALSE) %>% # escape = FALSE critical to avoid escaping special characters in the HTML
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
footnote(general = "Formula: change_scale ~ intervention*valence_scale + intervention*arousal_scale + (1 + intervention|sub)\n Intervention reference category is threat")
